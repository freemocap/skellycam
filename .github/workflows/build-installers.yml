name: Build installers

on:
  push:
    branches: [ "jon/development", "philip/mac_app" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-13, ubuntu-22.04]
        include:
          - os: windows-latest
            venv-activate: .venv\Scripts\activate
            install-port-audio: echo "PortAudio is not needed on Windows"
            pre-build-command: echo "No pre-build command needed for Windows"
            build-command: installers\\nuitka_scripts\\nuitka_installer_windows.bat
            server-executable: skellycam_server.exe
            electron-output: skellycam-ui\\release\\2.0.0\\skellycam_2.0.0_installer.exe
          - os: macos-13
            venv-activate: .venv/bin/activate
            install-port-audio: brew install portaudio
            pre-build-command: export PYTHONPATH=/opt/homebrew/opt/portaudio/lib/:/usr/local/opt/portaudio/lib/:$PYTHONPATH
            build-command: ./installers/nuitka_scripts/nuitka_installer_mac.sh
            server-executable: skellycam_server
            electron-output: skellycam-ui/release/2.0.0/skellycam_2.0.0_installer.dmg
          - os: ubuntu-22.04
            venv-activate: .venv/bin/activate
            install-port-audio: sudo apt-get update && sudo apt-get install -y clang portaudio19-dev
            pre-build-command: chmod +x ./installers/nuitka_scripts/nuitka_installer_linux.sh && export PATH="$PATH:/opt/hostedtoolcache/Python/3.11.11/x64/bin" && pip show nuitka
            build-command: sudo ./installers/nuitka_scripts/nuitka_installer_linux.sh
            server-executable: skellycam_server
            electron-output: skellycam-ui/release/2.0.0/skellycam_2.0.0_installer.deb
    # continue-on-error: true
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install portaudio
        run: ${{ matrix.install-port-audio }}

      - name: Install Python dependencies
        run: which pip && pip install -e.

      - name: Build with Nuitka
        run: |
          ${{ matrix.pre-build-command }}
          ${{ matrix.build-command }}

      - name: Check Nuitka build
        if: ${{ github.event.inputs.test-mode != 'true' }}
        run: |
          pwd
          ls -l ${{ matrix.server-executable }}
      - name: Move skellycam exe to build into `skellycam-ui` directory
        run: |          
          mv ${{ matrix.server-executable }} skellycam-ui

      - name: Install UI dependencies
        run: |
          cd skellycam-ui
          npm install

      - name: Build UI
        run: |
          cd skellycam-ui
          npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: skellycam-${{ runner.os }}
          path: |
            ${{ matrix.electron-output }}
          if-no-files-found: error